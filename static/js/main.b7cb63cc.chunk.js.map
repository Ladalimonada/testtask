{"version":3,"sources":["components/Table/actions.js","components/Table/components/Input/Input.jsx","components/Table/components/Spinner/Spinner.jsx","components/Table/components/AdditionalInfoBlock/AdditionalInfoBlock.jsx","components/Table/components/TableItem/TableItem.js","components/Table/components/Pagination/Pagination.jsx","components/Table/components/Select/Select.jsx","components/Table/Table.jsx","components/Table/reducer.js","App.js","store/rootReducer.js","store/store.js","components/Table/middleware.js","serviceWorker.js","index.js"],"names":["GET_DATA_REQUEST","GET_DATA_SUCCESS","GET_DATA_FAILURE","Input","onChangeText","value","placeholder","onChange","useCallback","event","target","StyledInput","styled","input","Spinner","StyledButton","ldsEllipsis1","keyframes","ldsEllipsis2","ldsEllipsis3","div","AdditionalInfoBlock","info","onClick","firstName","lastName","adress","streetAddress","city","state","zip","description","Container","Wrapper","e","stopPropagation","TableItem","props","data","id","email","phone","Pagination","RenderComponent","dataLimit","setActiveItem","maxPages","Math","round","length","useState","currentPage","setCurrentPage","changePage","pageNumber","Number","textContent","useEffect","startIndex","endIndex","slice","getPaginatedData","map","item","className","page","start","floor","Array","fill","_","idx","getPaginationGroup","index","Select","setSelectedValue","SelectItem","name","default","selected","select","Table","array","useSelector","loading","errorMessage","selectedValue","activeItem","setValue","key","direction","sortConfig","setSortConfig","sortedInfo","filter","obj","includes","sort","a","b","requestSort","getClassNameFor","undefined","onSubmit","preventDefault","type","style","color","initialState","App","dispatch","useDispatch","query","payload","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","next","fetch","then","res","json","response","catch","error","message","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7cb63cc.chunk.js","sourcesContent":["export const GET_DATA_REQUEST = 'GET_DATA_REQUEST';\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_DATA_FAILURE = 'GET_DATA_FAILURE';\r\nexport const GET_MORE_DATA_REQUEST = 'GET_MORE_DATA_REQUEST';\r\nexport const GET_MORE_DATA_SUCCESS = 'GET_MORE_DATA_SUCCESS';\r\nexport const GET_MORE_DATA_FAILURE = 'GET_MORE_DATA_FAILURE';\r\n\r\nexport const getDataRequest = (query) => ({\r\n    type: GET_DATA_REQUEST,\r\n    payload: query,\r\n});\r\n\r\nexport const getDataSuccess = (info) => ({\r\n    type: GET_DATA_SUCCESS,\r\n    payload: info,\r\n})\r\n\r\nexport const getDataFailure = (error) => ({\r\n    type: GET_DATA_FAILURE,\r\n    payload: error,\r\n})\r\n\r\nexport const getMoreDataRequest = (query) => ({\r\n    type: GET_MORE_DATA_REQUEST,\r\n    payload: query,\r\n});\r\n\r\nexport const getMoreDataSuccess = (info) => ({\r\n    type: GET_MORE_DATA_SUCCESS,\r\n    payload: info,\r\n})\r\n\r\nexport const getMoreDataFailure = (error) => ({\r\n    type: GET_MORE_DATA_FAILURE,\r\n    payload: error,\r\n})","import React, { useCallback } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport function Input({ onChangeText, value, placeholder }) {\r\n  const onChange = useCallback((event) => {\r\n    onChangeText(event.target.value);\r\n  }, [onChangeText]);\r\n  return <StyledInput placeholder={placeholder} onChange={onChange} value={value} />;\r\n}\r\n\r\nconst StyledInput = styled.input`\r\nwidth: 40em;\r\nheight: 30px;\r\nmargin-bottom: 20px;\r\nborder: 1px solid #B3E5FC;\r\nbackground: #E1F5FE;\r\noutline: none;\r\ncolor: black;\r\n&::-webkit-input-placeholder {\r\n    color: black;}\r\n`;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nexport function Spinner() {\r\n  return (\r\n    <StyledButton>\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </StyledButton>\r\n  );\r\n}\r\n\r\nconst ldsEllipsis1 = keyframes`\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n  `;\r\nconst ldsEllipsis2 = keyframes`\r\n  0% {\r\n    transform: translate(0, 0);\r\n  }\r\n  100% {\r\n    transform: translate(24px, 0);\r\n  }\r\n}\r\n`;\r\nconst ldsEllipsis3 = keyframes`\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    transform: scale(0);\r\n  }\r\n}\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  position: relative;\r\n  left: 300%;\r\n  width: 80px;\r\n  height: 80px;\r\n  & div {\r\n    position: absolute;\r\n  top: 33px;\r\n  width: 13px;\r\n  height: 13px;\r\n  border-radius: 50%;\r\n  background: #B3E5FC;\r\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n  } & div:nth-child(1) {\r\n    left: 8px;\r\n  animation: ${ldsEllipsis1} 0.6s infinite;\r\n  } & div:nth-child(2) {\r\n    left: 8px;\r\n  animation: ${ldsEllipsis2} 0.6s infinite;\r\n  } & div:nth-child(3) {\r\n    left: 32px;\r\n  animation: ${ldsEllipsis2} 0.6s infinite;\r\n  } & div:nth-child(4) {\r\n    left: 56px;\r\n  animation: ${ldsEllipsis3} 0.6s infinite;\r\n  }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport function AdditionalInfoBlock({ info, onClick }) {\r\n\r\n  const {\r\n    firstName, lastName, adress: { streetAddress, city, state, zip }, description\r\n  } = info;\r\n\r\n  const handleClick = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <Container onClick={onClick}>\r\n      <Wrapper onClick={handleClick}>\r\n        <h3>Profile info</h3>\r\n        <div>Selected profile: {firstName\r\n          + \" \" + lastName}</div>\r\n        <div>Description: {description}</div>\r\n        <div>Address: {streetAddress}</div>\r\n        <div>City: {city} </div>\r\n        <div>State: {state} </div>\r\n        <div>Index: {zip} </div>\r\n      </Wrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground: rgba(0, 0, 0, 0.5);\r\noverflow: auto;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;`\r\n\r\nconst Wrapper = styled.div`\r\nwidth: 17em;\r\nmin-height:15em;\r\npadding: 10px 20px;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:center;\r\nalign-items: center;\r\nfont-size: 20px;\r\nbackground: white`;","import React from 'react';\r\n\r\nexport function TableItem(props) {\r\n\r\n    const {\r\n        id, firstName, lastName, email, phone\r\n    } = props.data;\r\n    return (\r\n        <>\r\n            <tr onClick={props.onClick}>\r\n                <td>{id}</td>\r\n                <td>{firstName}</td>\r\n                <td>{lastName}</td>\r\n                <td>{email}</td>\r\n                <td>{phone}</td>\r\n            </tr>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport styles from './styles.css'\r\n\r\nexport function Pagination({ data, RenderComponent, dataLimit, setActiveItem }) {\r\n\r\n  const maxPages =  Math.round(data.length / dataLimit);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (data.length) {\r\n      setCurrentPage(1)}\r\n  }, [data.length] )\r\n\r\n\r\n  function goToNextPage() {\r\n    setCurrentPage((page) => page + 1);\r\n  }\r\n\r\n  function goToPreviousPage() {\r\n    setCurrentPage((page) => page - 1);\r\n  }\r\n\r\n  function changePage(event) {\r\n    const pageNumber = Number(event.target.textContent);\r\n    setCurrentPage(pageNumber);\r\n\r\n  }\r\n\r\n  const getPaginatedData = () => {\r\n    const startIndex = currentPage * dataLimit - dataLimit;\r\n    const endIndex = startIndex + dataLimit;\r\n    return data.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getPaginationGroup = () => {\r\n    let start = Math.floor((currentPage - 1) / maxPages) * maxPages;\r\n    return new Array(maxPages).fill().map((_, idx) => start + idx + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {getPaginatedData().map((item) => (\r\n        <RenderComponent key={item.phone} data={item} onClick={() => setActiveItem(item)} />\r\n      ))}\r\n      <div className=\"pagination\">\r\n        <button\r\n          onClick={goToPreviousPage}\r\n          className={`prev \r\n          ${currentPage === 1 ? 'disabled' : ''}\r\n          ${maxPages <= 1 ? 'nonvisible' : ''}\r\n          `}\r\n        >\r\n          prev\r\n        </button>\r\n        {getPaginationGroup().map((item, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={changePage}\r\n            className={`paginationItem ${currentPage === item ? 'active' : null}`}\r\n          >\r\n            {maxPages > 1 ? <span>{item}</span> : null}\r\n          </button>\r\n        ))}\r\n        <button\r\n          onClick={goToNextPage}\r\n          className={`next \r\n        ${currentPage === maxPages  ? 'disabled' : ''}\r\n        ${maxPages <= 1 ? 'nonvisible' : ''}\r\n        `}\r\n        >\r\n          next\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport function Select({ setSelectedValue }) {\r\n\r\n  const usStates = ['AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT',\r\n    'DE', 'DC', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS'];\r\n\r\n  return (\r\n    <>\r\n      <SelectItem name=\"states\" id=\"states\" onChange={(e) => setSelectedValue(e)}>\r\n        <option value=\"\" default selected>Filter by state</option>\r\n        {usStates.map((item) => <option id={item}>{item}</option>)}\r\n      </SelectItem>\r\n    </>\r\n  )\r\n}\r\n\r\nconst SelectItem = styled.select`\r\nwidth: 10em;\r\nheight: 34px;\r\nborder: 1px solid #B3E5FC;\r\nbackground: #E1F5FE;\r\noutline: none;\r\n  `;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  TableItem,\r\n  AdditionalInfoBlock,\r\n  Pagination,\r\n  Select,\r\n  Input,\r\n  Spinner,\r\n} from './components';\r\nimport styles from './styles.css'\r\n\r\nexport function Table() {\r\n\r\n  const {\r\n    loading, info, errorMessage,\r\n  } = useSelector((state) => state.data);\r\n\r\n  const [selectedValue, setSelectedValue] = useState(null);\r\n  const [activeItem, setActiveItem] = useState('');\r\n  const [value, setValue] = useState('');\r\n  const [sortConfig, setSortConfig] = useState({ key: 'id', direction: 'ascending' });\r\n\r\n  const sortedInfo = getFilteredData(info);\r\n\r\n  function getFilteredData(array) {\r\n    return (\r\n      [...array.filter(obj =>\r\n        selectedValue ?\r\n          obj.adress.state === selectedValue && (obj.firstName.includes(value) || obj.lastName.includes(value)) :\r\n          (obj.firstName.includes(value) || obj.lastName.includes(value)))]\r\n    )\r\n  }\r\n\r\n  sortedInfo.sort((a, b) => {\r\n    if (a[sortConfig.key] < b[sortConfig.key]) {\r\n      return sortConfig.direction === 'ascending' ? -1 : 1;\r\n    }\r\n    if (a[sortConfig.key] > b[sortConfig.key]) {\r\n      return sortConfig.direction === 'ascending' ? 1 : -1;\r\n    }\r\n    return 0;\r\n  })\r\n\r\n  const requestSort = key => {\r\n    let direction = 'ascending';\r\n    if (sortConfig.key === key & sortConfig.direction === 'ascending') {\r\n      direction = 'descending'\r\n    }\r\n    setSortConfig({ key, direction })\r\n  }\r\n\r\n  const getClassNameFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined\r\n  }\r\n\r\n  const getActiveItem = (item) => {\r\n    setActiveItem(item)\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setSelectedValue(e.target.value);\r\n  };\r\n\r\n  return (<div className=\"wrapper\">\r\n    <form onSubmit={(event) => {\r\n      event.preventDefault();\r\n    }}>\r\n      <Input placeholder='Search by Name' value={value} onChangeText={setValue} />\r\n      <Select value={selectedValue} setSelectedValue={handleChange}></Select>\r\n    </form>\r\n    <table >\r\n      <thead>\r\n        <tr>\r\n          <th><button type=\"button\" onClick={() => requestSort('id')}\r\n            className={getClassNameFor('id')}>\r\n            id\r\n          </button></th>\r\n          <th><button type=\"button\" onClick={() => requestSort('firstName')}\r\n            className={getClassNameFor('firstName')}>\r\n            First Name\r\n          </button></th>\r\n          <th><button type=\"button\" onClick={() => requestSort('lastName')}\r\n            className={getClassNameFor('lastName')}>\r\n            Last Name\r\n          </button></th>\r\n          <th><button type=\"button\" onClick={() => requestSort('email')}\r\n            className={getClassNameFor('email')}>\r\n            Email\r\n          </button></th>\r\n          <th><button type=\"button\" onClick={() => requestSort('phone')}\r\n            className={getClassNameFor('phone')}>\r\n            Phone\r\n          </button></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {loading ? <Spinner /> : null}\r\n        {errorMessage ? <h2 style={{ color: 'red' }}>{errorMessage}</h2> : null}\r\n        {info ? <Pagination\r\n          data={sortedInfo}\r\n          RenderComponent={TableItem}\r\n          dataLimit={20}\r\n          setActiveItem={getActiveItem}\r\n        /> : null}\r\n      </tbody>\r\n    </table>\r\n    {activeItem ?\r\n      <AdditionalInfoBlock info={activeItem} onClick={() => setActiveItem(null)}></AdditionalInfoBlock>\r\n      : null}\r\n  </div>)\r\n}\r\n\r\n","import {\r\n    GET_DATA_REQUEST,\r\n    GET_DATA_SUCCESS,\r\n    GET_DATA_FAILURE,\r\n    // GET_MORE_DATA_REQUEST,\r\n    // GET_MORE_DATA_SUCCESS,\r\n    // GET_MORE_DATA_FAILURE,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n    info: [],\r\n    loading: false,\r\n    errorMessage: null,\r\n};\r\n\r\nexport const dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DATA_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                info: action.payload,\r\n                loading:false,\r\n            };\r\n        }\r\n        case GET_DATA_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                errorMessage: null,\r\n            };\r\n        }\r\n        case GET_DATA_FAILURE: {\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                errorMessage: action.payload,\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getDataRequest } from './components/Table/actions';\r\nimport { Table } from './components/Table';\r\n\r\nimport './App.css';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() =>{\r\n    dispatch(getDataRequest());\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <Table></Table>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { dataReducer } from '../components/Table/reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    data: dataReducer\r\n});","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer } from './rootReducer';\r\nimport { getDataMiddleware } from '../components/Table/middleware';\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(getDataMiddleware)\r\n));","import {\r\n    GET_DATA_REQUEST,\r\n    getDataFailure,\r\n    getDataSuccess,\r\n} from './actions';\r\n\r\nexport const getDataMiddleware = (store) => (next) => (action) => {\r\n    if (action.type === GET_DATA_REQUEST) {\r\n        fetch('https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json')\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                store.dispatch(getDataSuccess(response));\r\n            })\r\n            .catch((e) => {\r\n                store.dispatch(getDataFailure(e.message))\r\n            });\r\n    }\r\n    next(action);\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}